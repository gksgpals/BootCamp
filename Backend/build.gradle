plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.node-gradle.node' version '3.0.1'
}

group = 'posting.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Node.js 플러그인 설정
node {
	version = '16.20.0'
	npmVersion = '8.19.2'
	download = true
	workDir = file("${project.buildDir}/nodejs")
	nodeModulesDir = file('../Frontend')
}

// React 앱 빌드 태스크
task buildFrontend(type: com.github.gradle.node.npm.task.NpmTask) {
	dependsOn 'npmInstall'
	workingDir = file('../Frontend')
	args = ['run', 'build']
}

// 빌드된 React 정적 리소스를 Spring Boot로 복사
processResources {
	dependsOn buildFrontend
	from('../Frontend/build') {
		into 'static'
		duplicatesStrategy = 'exclude'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
